//Gate level abstraction implementation
module full_adder_gl(sum,carry,a,b,cin);

input a,b,cin;
output sum,carry;
wire w1,w2,w3;

xor a1(sum,a,b,cin);
and b1(w1,a,b);
and b2(w2,b,cin);
and b3(w3,a,cin);
or c1(carry,w1,w2,w3);

endmodule

//Data_flow level abstraction implementation
module full_adder_df(sum,carry,a,b,cin);

input a,b,cin;
output sum, carry;

assign sum = a^b^cin;
assign carry = (a*b)+(b*cin)+(a*cin);

endmodule

//Behavioral level abstraction implementation
module full_adder_bhvl(sum,carry,a,b,cin);

input a,b,cin;
output reg carry,sum;

always@(a,b,cin)begin
	case({a,b,cin})
		3'b000:sum=0;carry=0;
		(3'b001 | 3'b010 | 3'b100):begin
			sum=1;carry=0;
			end
		(3'b011 | 3'b101 | 3'b110):begin
			sum=0;carry=1;
			end
		3'b111:begin
			sum=1;carry=1;
			end
		default:begin
			sum=0;carry=0;
			end
	endcase
	end
endmodule
